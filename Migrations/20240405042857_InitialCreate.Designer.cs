// <auto-generated />
using Arm_mo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Arm_mo.Migrations
{
    [DbContext(typeof(Arm_moContext))]
    [Migration("20240405042857_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arm_mo.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeditatorId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("MeditatorId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Arm_mo.Models.Meditator", b =>
                {
                    b.Property<int>("MeditatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeditatorId"));

                    b.Property<string>("CurrentStage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeditatorId");

                    b.ToTable("Meditators");
                });

            modelBuilder.Entity("Arm_mo.Models.ProfilePicture", b =>
                {
                    b.Property<int>("ProfilePictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfilePictureId"));

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeditatorId")
                        .HasColumnType("int");

                    b.HasKey("ProfilePictureId");

                    b.HasIndex("MeditatorId");

                    b.ToTable("ProfilePicture");
                });

            modelBuilder.Entity("Arm_mo.Models.Stage", b =>
                {
                    b.Property<int>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageId"));

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intentions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMastered")
                        .HasColumnType("bit");

                    b.Property<string>("MasteryRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obstacles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StageId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("Arm_mo.Models.StagePicture", b =>
                {
                    b.Property<int>("StagePictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StagePictureId"));

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("StagePictureId");

                    b.HasIndex("StageId")
                        .IsUnique();

                    b.ToTable("StagePicture");
                });

            modelBuilder.Entity("Arm_mo.Models.Address", b =>
                {
                    b.HasOne("Arm_mo.Models.Meditator", null)
                        .WithOne("Address")
                        .HasForeignKey("Arm_mo.Models.Address", "MeditatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm_mo.Models.ProfilePicture", b =>
                {
                    b.HasOne("Arm_mo.Models.Meditator", null)
                        .WithMany("profilePictures")
                        .HasForeignKey("MeditatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm_mo.Models.StagePicture", b =>
                {
                    b.HasOne("Arm_mo.Models.Stage", null)
                        .WithOne("picture")
                        .HasForeignKey("Arm_mo.Models.StagePicture", "StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm_mo.Models.Meditator", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("profilePictures");
                });

            modelBuilder.Entity("Arm_mo.Models.Stage", b =>
                {
                    b.Navigation("picture")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
